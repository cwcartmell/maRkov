% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single_binary_test.R
\name{single_binary_test}
\alias{single_binary_test}
\title{Perform goodness-of-fit tests on a single binary chain.}
\usage{
single_binary_test(binary_chain, swaps = 1000, n = 1000, run = 4,
  tiles = 30, bins = 30, success = NULL)
}
\arguments{
\item{binary_chain}{A one dimensional vector with two unique values.}

\item{swaps}{A positive nonzero integer value for the number of swaps to be
attempted on the chain. Larger numbers will tend to yield "more independent"
data. Generally, the number of swaps should be far greater than the length
of \code{binary_chain}.}

\item{n}{A positive nonzero integer value representing the number of new
chains to be generated.}

\item{run}{The length of run to test for if one is interested in run test
statistics.}

\item{tiles}{The number of chains to be represented in the tile plot when
one plots objects generated by \code{single_binary_test}}

\item{bins}{The number of bins to be displayed in histograms of test
statistics when one plots objects generated by \code{single_binary_test}.}

\item{success}{Denotes the data entry to be counted for run statistics.}
}
\value{
\code{single_binary_test} returns a list of \link{class}
\code{"single_binary_test"} with the following elements:

\code{data}, a matrix of data with \code{binary_chain} in the first row, and
the generated n rows of data in the following columns.

\code{test_stats_lrt}, a vector of likelihood ratio test statistics for each
row of data in \code{data}.

\code{test_stats_chi_sq},  a vector of Pearson's chi square test statistics
for each row of data in \code{data}.

\code{test_stats_run},  a vector of run test statistics for a run of length
\code{run} for each row of data in \code{data}.

\code{p_value_lrt}, the p-value of \code{binary_chain} calculated exactly
from the distribution of \code{test_stats_lrt}

\code{p_value_chi_sq}, the p-value of \code{binary_chain} calculated exactly
from the distribution of \code{test_stats_chi_sq}

\code{p_value_run}, the p-value of \code{binary_chain} calculated exactly
from the distribution of \code{test_stats_run}

\code{call}, the function call.

\code{run}, the length of run specified in the function call.

\code{tiles}, the number of tiles specified in the function call.

\code{bins}, the number of bins specified in the function call.
}
\description{
\code{single_binary_test} is used to preform goodness-of-fit tests on single
binary chains of data to see if a Markov chain model is appropriate.
}
\details{
\code{single_binary_test} works by taking the supplied \code{binary_chain}
parameter, counting the transitions between different elements, and then
generating \code{n} new chains with the same number of transitions. It
generates these new chains by attempting to swap random elements of the chain
\code{swaps} times, only doing so if the attempted swap preserves the number
of transitions between the two unique elements of the chain.
\code{single_binary_test} then saves the chain generated by this process,
then preforms a number of swaps equivalent to the value of \code{swaps} on
that chain again, then recording the result in a matrix of new data.
\code{single_binary_test} does this \code{n} times to generate the \code{n}
new chains. These new chains are effectively independent of the original one.

Once \code{single_binary_test} has generated new data, it preforms various
tests on that data. Included in the function are the likelihood ratio test,
the Pearson's chi square test, and a run test for a run of length specified
by the argument \code{run}.
}
\examples{
data <- c(1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0)
foo <- single_binary_test(binary_chain = data, swaps = 10000, n = 10000,
run = 4, tiles = 32, bins = 100, success = 1)

}

