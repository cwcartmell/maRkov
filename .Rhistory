library(maRkov)
source('C:/Users/Conrad/Dropbox/Markov/old_files/R/test_chains.R', echo=TRUE)
derp.multiple <- multiple.binary.test(e, 100, 100)
str(derp.multiple)
summary(derp.multiple)
plot(derp.multiple)
derp.single <- single.binary.test(a, 1000, 1000)
summary(derp.single, 100, 100)
plot(derp.single)
clear
lintr::lint_package()
setequal(a,b)
setequal
setequal(c(x,y),c(x,a))
setequal(c(1,2),c(2,1))
setequal(c(1,2),c(2,3))
setequal(c(1,2),c(2,1,2,1))
library(maRkov)
?check.false.binary
library(maRkov)
?check.true.binary
library(maRkov)
library(maRkov)
?check.true.binary
?lm
?alter.to.true.binary
library(maRkov)
?alter.to.true.binary
?lm
T
F
library(maRkov)
?check.false.binary
e[10:14,4:8]
matrix(data = c(1,0,0,0,1,0,0,1,1), ncol ncol = 3)
matrix(data = c(1,0,0,0,1,0,0,1,1), ncol = 3)
matrix(data = c(1,0,1,0,1,0,0,1,1), ncol = 3)
library(maRkov)
?lm
?class
Rcpp::sourceCpp('src/binarySwaps.cpp')
devtools::load_all(".")
devtools::load_all(".")
library(maRkov)
library(maRkov)
library(maRkov)
library(maRkov)
library(maRkov)
library(maRkov)
?lm
library(maRkov)
library(maRkov)
library(maRkov)
library(maRkov)
install.packages("BH")
install.packages("htmltools")
Sys.getenv("PATH")
system('g++ -v')
devtools::load_all("C:/Users/Conrad/Dropbox/Packages/maRkov")
Rcpp::sourceCpp('C:/Users/Conrad/Dropbox/Packages/maRkov/src/binarySwaps.cpp')
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
Rcpp::compileAttributes()
Rcpp::compileAttributes()
library(maRkov)
library(maRkov)
Rcpp::sourceCpp('src/binarySwaps.cpp')
library(maRkov)
library(maRkov)
derp.multiple <- maRkov::multiple.binary.test(e, 1000, 1000)
library(maRkov)
multiple.binary.test()
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 1000, 1000)
library(maRkov)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 1000, 1000)
devtools::use_rcpp()
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 1000, 1000)
library(maRkov)
devtools::load_all(".")
multiple.binary.test(e, 1000, 1000)
vignette("namespace", package = "roxygen2")
library(maRkov)
derp.multiple <- multiple.binary.test(e, 1000, 1000)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 1000, 1000)
source('C:/Users/Conrad/Dropbox/Packages/maRkov/R/multiple.binary.test.R', echo=TRUE)
Rcpp::sourceCpp('src/binarySwaps.cpp')
Rcpp::sourceCpp('src/binarySwaps.cpp')
source('C:/Users/Conrad/Dropbox/Packages/maRkov/R/binary_swaps.R', echo=TRUE)
derp.multiple <- multiple.binary.test(e, 1000, 1000)
plot(derp.multiple)
library(maRkov)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 1000, 1000)
devtools::load_all(".")
library(maRkov)
library(maRkov)
derp.multiple <- multiple.binary.test(e, 1000, 1000)
source('C:/Users/Conrad/Dropbox/Markov/old_files/R/test_chains.R', echo=TRUE)
library(maRkov)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 100, 100)
library(maRkov)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 100, 100)
library(maRkov)
library(maRkov)
library(maRkov)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 100, 100)
library(maRkov)
devtools::load_all(".")
derp.multiple <- multiple.binary.test(e, 100, 100)
str(derp.multiple)
devtools::load_all(".")
install.packages(c("Rcpp", "shiny"))
?knitr::kable
?data.frame
?knitr::kable
?data.frame
seq(1:31)
a <- seq(1:31)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(a)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
a
?read.csv
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?cat
?c
as.character()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?read.csv
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a[1:4,1:4]
source('~/.active-rstudio-document', echo=TRUE)
a1
source('~/.active-rstudio-document', echo=TRUE)
a1
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
devtools::use_data(a1, snoqualmie)
?devtools::use_data
source('~/.active-rstudio-document', echo=TRUE)
View(snoqualmie)
devtools::use_data(snoqualmie)
?knitr::kable
knitr::kable(snoqualmie)
knitr::kable(head(data/snoqualmie.rda)
)
devtools::load_all(".")
knitr::kable(snoqualmie)
knitr::kable(snoqualmie)
snoqualmie
install.packages("lubridate")
library("grDevices", lib.loc="~/R/R-3.2.3/library")
detach("package:grDevices", unload=TRUE)
library(maRkov)
devtools::load_all(".")
snoqualmie
?knitr::kable
?matrix
as.matrix()
?as.matrix
as.matrix(snoqualmie)
a <- as.matrix(snoqualmie)
View(a)
View(a)
multiple.binary.test(a, 10000, 10000)
derp <- multiple.binary.test(a, 10000, 10000)
summary(derp)
library(maRkov)
snoqualmie.test <- multiple.binary.test(binary.chains = snoqualmie.matrix, swaps = 1000, n = 1000)
summary(snoqualmie.test)
# Chunk 1
library(maRkov)
knitr::kable(maRkov::snoqualmie)
# Chunk 2
snoqualmie.matrix <- as.matrix(maRkov::snoqualmie)
library(maRkov)
snoqualmie.test <- multiple.binary.test(binary.chains = snoqualmie.matrix, swaps = 1000, n = 1000)
summary(snoqualmie.test)
library(maRkov)
devtools::load_all(".")
summary(snoqualmie.test)
plot(snoqualmie.test)
derp.snoqualmie <- multiple.binary.test(snoqualmie.matrix, 10000, 10000)
summary(derp.snoqualmie)
plot(derp.snoqualmie)
install.packages('lubridate')
getwd()
?read.table
read.table('C:\Users\Conrad\Dropbox\Markov\DATA\raw tornado data.txt', header = FALSE, sep = "\t")
read.table('C:\users\Conrad\Dropbox\Markov\DATA\raw tornado data.txt', header = FALSE, sep = "\t")
read.table('~\~\Markov\DATA\raw tornado data.txt', header = FALSE, sep = "\t")
read.table('.\.\Markov\DATA\raw tornado data.txt', header = FALSE, sep = "\t")
read.table('\Markov\DATA\raw tornado data.txt', header = FALSE, sep = "\t")
read.table("\Markov\DATA\raw tornado data.txt", header = FALSE, sep = "\t")
tornadoz <- read.table('C:/Users/Conrad/Dropbox/Markov/DATA/raw tornado data.txt', header = FALSE, sep = "/t")
tornadoz <- read.table('C:/Users/Conrad/Dropbox/Markov/DATA/raw tornado data.txt', header = FALSE, sep = "\t")
tornadoz <- read.table('C:/Users/Conrad/Dropbox/Markov/DATA/raw tornado data.txt', header = FALSE, sep = "\t", na.strings = "")
tornadoz <- read.table('C:/Users/Conrad/Dropbox/Markov/DATA/raw tornado data.txt', header = FALSE, sep = "\t",fill = TRUE)
View(tornadoz)
tornadoz[222,9]
library(dplyr)
torn <- select(tornadoz, V2)
View(torn)
torn <- mutate(UTC_date = mdy(V2))
?mutate
torn <- mutate(torn, UTC_date = mdy(V2))
?mdy
source('~/.active-rstudio-document', echo=TRUE)
torn$UTC_date[2]
str(torn$UTC_date)
is.Date(torn$UTC_date[1])
?for
stop
length(torn$UTC_date)
}
is_date <- is.Date(torn$UTC_date)
as.vector()
?as.vector
is_date <- is.Date(as.vector(torn$UTC_date)
is_date <- is.Date(as.vector(torn$UTC_date))
is_date <- is.Date(as.vector(torn$UTC_date))
torn_vec <- as.vector(torn$UTC_date)
source('~/.active-rstudio-document', echo=TRUE)
View(torn)
View(torn)
torn_is_date <- as.vector(torn$is_date)
i
torn_is_date[1]
for ( i in 1 : length(is_date)) {
if (torn_is_date[i] == FALSE) {
i
}
}
for ( i in 1 : length(is_date)) {
if (torn_is_date[i] == FALSE) {
i
}
}
for ( i in 1 : length(torn_is_date)) {
source('~/.active-rstudio-document', echo=TRUE)
stop()
stop
cancel
)
for ( i in 1 : length(torn_is_date)) {
if (torn_is_date[i] == FALSE) {
i
}
}
unique(torn_is_date)
source('~/.active-rstudio-document', echo=TRUE)
?year
year(torn$UTC_date[1])
?day
torn <- mutate(torn, year = year(UTC_date), day = yday(UTC_date))
?matrix
torn_mat <- matrix( data = NA, nrow = 366, ncol = 65)
torn_mat
length(torn$year)
source('~/.active-rstudio-document', echo=TRUE)
a <- matrix(c(1,2,3,4), nrow = 2)
a
a[1,2]
torn_mat[ torn$year[ i], torn$day[ i]] <- 1
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
as.integer(torn$year)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
as.integer( torn$year[ i] - 1949)
as.integer( torn$year[ 1] - 1949)
source('~/.active-rstudio-document', echo=TRUE)
torn_mat
torn_mat
torn_mat[2011-1949, 112]
torn_mat[2011-1949, 111]
torn_mat[2011-1949, 109]
2015-1950
nrows(torn_mat)
nrow(torn_mat)
unique(torn$years)
unique(as.integer(torn$year))
length(unique(as.integer(torn$year)))
torn.test <- multiple.binary.test(torn_mat)
plot(torn.test)
plot(torn.test)
summary(torn.test)
?data.frame
source('~/.active-rstudio-document', echo=TRUE)
View(ok_tornado)
ok_tornado
seq( 1950 : 2015)
?seq
source('~/.active-rstudio-document', echo=TRUE)
View(ok_tornado)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?devtools::use_data()
?devtools::use_data
devtools::use_data(ok_tornado, maRkov, internal = TRUE)
library(maRkov)
devtools::use_data(ok_tornado, "maRkov", internal = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
devtools::use_data(ok_tornado, "maRkov", internal = TRUE)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
library(maRkov)
devtools::load_all(".")
derp <- ok_tornado
devtools::use_vignette("oklahoma_tornadoes")
?sample
sample(seq(from = 1950, to = 2015, by = 1), 1)
x <- as.matrix(ok_tornado)
devtools::load_all(".")
x <- as.matrix(ok_tornado)
2015-2009
torn <- ok_tornado
View(torn)
x2009 <- x[60, :]
x2009 <- x[60, ]
derp.ok09 <- single.binary.test(x2009, 10000, 10000)
summary(derp.ok09)
tornadoes <- as.matrix(ok_tornado)
tornadoes_2009 <- tornadoes[ 60, ]
devtools::use_vignette("test_statistics")
devtools::use_vignette("n")
devtools::load_all(".")
source('~/.active-rstudio-document', echo=TRUE)
plot(tornadoes.test)
?image
x <- tornadoes.test$data[[1]]
reverse <- nrow(x):1
x <- x[reverse, ]
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3",
"chocolate1"))
x <- tornadoes.test$data[[1]]
reverse <- nrow(x):1
x <- x[reverse, ]
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3",
"chocolate1"))
par ask = FALSE
x <- tornadoes.test$data[[1]]
reverse <- nrow(x):1
x <- x[reverse, ]
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3",
"chocolate1"))
par(ask = FALSE)
x <- tornadoes.test$data[[1]]
reverse <- nrow(x):1
x <- x[reverse, ]
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3",
"chocolate1"))
x <- tornadoes.test$data[[1]]
reverse <- nrow(x):1
x <- x[reverse, ]
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3",
"chocolate1"))
segments(60, 0, 60, 66)
segments(244, 0, 244, 66)
?segments
text(60, 0, "March 1st")
text(244, 0, "August 31st")
segments(245, 0, 245, 66)
text(60, 0, "March 1st")
segments(60, 0, 60, 67)
segments(244, 0, 244, 67)
text(40, 60, "March 1st")
View(tornadoes)
View(tornadoes)
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3", "chocolate1"))
segments(60, 0, 60, 67)
segments(244, 0, 244, 67)
text(40, 65, "March 1st")
text(264, 65, "August 31st")
text(266, 63, "August 31st")
image(c(1:ncol(x)), c(1:nrow(x)), t(x), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3", "chocolate1"))
segments(60, 0, 60, 67)
segments(244, 0, 244, 67)
text(40, 63, "March 1st")
text(266, 63, "August 31st")
reverse <- nrow(tornadoes.test$data[[1]]):1
torn.data <- torn.data[reverse, ]
torn.data <-
image(c(1:ncol(torn.data)), c(1:nrow(torn.data)), t(torn.data), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3", "chocolate1"))
segments(60, 0, 60, 67)
segments(244, 0, 244, 67)
text(40, 63, "March 1st")
text(266, 63, "August 31st")
torn.data <- tornadoes.test$data[[1]]
reverse <- nrow(torn.data):1
torn.data <- torn.data[reverse, ]
torn.data <-
image(c(1:ncol(torn.data)), c(1:nrow(torn.data)), t(torn.data), axes = FALSE, ylab = " ", xlab = "Visual representation of the actual Markov Chain.", col = c("aquamarine3", "chocolate1"))
segments(60, 0, 60, 67)
segments(244, 0, 244, 67)
text(40, 63, "March 1st")
text(266, 63, "August 31st")
devtools::load_all(".")
tornadoes.season <- tornadoes[60 : 244, ]
tornadoes.season <- tornadoes[ , 60 : 244]
tornadoes.season.test <- multiple.binary.test(tornadoes.season, swaps = 10000, n = 10000)
plot(tornadoes.season.test)
summary(tornadoes.season.test)
Rcpp::sourceCpp('src/general_resources.cpp')
devtools::load_all(".")
torn.test <- multiple.binary.test(tornadoes, 1000, 1000)
devtools::load_all(".")
tornadoes.test <- multiple.binary.test(tornadoes, 1000, 1000)
summary(tornadoes.test)
plot(tornadoes.test)
devtools::load_all(".")
?multiple.binary.test
Rcpp::sourceCpp('src/single_binary_swaps.cpp')
Rcpp::sourceCpp('src/single_binary_swaps.cpp')
View(snoqualmie.matrix)
snoqualmie.matrix[1970]
snoqualmie.matrix[23,]
sno1970 <- snoqualmie.matrix[23, ]
devtools::load_all(".")
sno1970.test <- single.binary.test(sno1970, 10000, 10000)
summary(sno1970.test)
devtools::load_all("C:/Users/Conrad/Dropbox/Packages/maRkov")
sno1970.test <- single.binary.test(sno1970, 10000, 10000)
summary(sno1970.test)
